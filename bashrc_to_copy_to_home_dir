# .bashrc

# skip this file for non-interactive sessions
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific aliases and functions
alias la='ls -a'
alias ll='ls -l'
alias ..='cd ..'
alias ...='cd ../..'
alias ack=ack-grep
alias vi=gvim
alias vir='vi --remote-tab'
alias fileshare='sudo mount -t cifs //fcfs1.pelco.org/Data /mnt/fcfs1 -o rw,user=jim.anderson'
alias ub='/home/jima/work/avig/unity/tools/ub'
# alias vm='ssh mgdh46@10.66.4.226'
alias oldvm='ssh mgdh46@mgdh46-dev-vm-01.am.mot-solutions.com'
alias vm='ssh mgdh46@mgdh46-dev-01.am.mot-solutions.com'
alias azlogin='az login --use-device-code && az acr login --name ciedevelop' 

function sshc { ssh -i ~/.ssh/camera_rsa root@$1; }
function logenv { . /home/jima/working/logfiles/venv/bin/activate; export PATH=$PATH:/home/jima/working/logfiles:; }
function fcbuildv { sshpass -p Pbse:282-1900 ssh omons_team@fcbuild${1}vm.pelco.org; }
function fcbuild { sshpass -p Pbse:282-1900 ssh omons_team@fcbuild${1}.pelco.org; }
function dotstat { git status .; }
function showtool { git difftool $1^ $1; }
function showfile { git difftool $1^ $1 -- $2; }
function acki { ack --ignore-dir=build/ $*; }
function ackd { rm -f dump && ack $* > /tmp/dump && mv /tmp/dump .; }
function ackdd { rm -f dump && ack $* > /tmp/dump && mv /tmp/dump . && vir dump; }

PATH=$PATH:$HOME/bin:/opt/omtools/bin:/sbin
export PATH=/home/jima/.local/bin:/home/jima/work/omons/build-tools/build-commands:$PATH
export PATH="$HOME/.poetry/bin:$PATH"

export PATH

# forces editor sessions from git to use gvim!
export VISUAL="$HOME/bin/vimgit.sh"

# Set up git to use the MSI key
# export GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa_msi"

export PYTHONPATH="$HOME/work/avig/origcameracontroller/CameraController:$PYTHONPATH"
export PYTHONPATH
# set up env for virtualenv wrapper
export VIRTUALENV_PYTHON=/usr/bin/python3.8
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3.8
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/work/python
if [ -f .local/bin//virtualenvwrapper.sh ]; then
source .local/bin/virtualenvwrapper.sh
# source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
fi

## pyenv configs
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

source ~/bin/git-completion.bash
eval "$(starship init bash)"
